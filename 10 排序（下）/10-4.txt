简单选择排序：不稳定。
因为每一趟要**遍历**非有序序列中选择一个最小元，如果在某一趟中有两个最小元，那么会优先选择后一个，而不是前一个，相对位置被改变了，所以不稳定。

冒泡排序：稳定。
因为只有大于/小于才会交换，相等是不交换的。

直接插入排序：稳定。
因为每一趟要将非有序序列中的第一个元素插入到有序序列的合适位置，也是相等不交换。

希尔排序：不稳定。
因为是在增量序列上进行插入排序，那么如果有77 66 66，当前增量为2，指针指向第二个66，那么两个66的相对位置就改变了。

堆排序：不稳定。
因为比如最大堆，只保证根大于子堆所有元素。而且删除一个元素后，换到新根，下滤时，优先选择左子堆，如果右子堆不小于左子堆的话，也就是左子堆大于等于右子堆的话，就走左子堆。那么考虑[21 20a 20b 12 11 8 7]，三趟排序后，得到[7 8 11 12 20b 20a 21]。

https://stackoverflow.com/questions/19336881/why-isnt-heapsort-stable

快速排序：不稳定。
如果知道快速排序选定主元后，用于调整元素位置的双指针算法的话，就理解了。如[34 34 22 ... 30]，这里主元是30，i指针指向第一个34前面的那个dummy element，j指针指向22，那么下一步第一个34就会和22交换，导致两个34的相对位置改变。

归并排序：稳定。
只要归并排序在merge时，双指针，如果左边的序列中的元素<=右边序列中的元素，那么就选择左边序列中的元素。

基数排序：稳定。
因为基数排序对每一位的排序都依赖一个稳定的排序算法来完成（否则基数排序算法就失效了），所以它显然是稳定的。